# GitHub Action for PHP with extensions
name: macOS

on:
  push:
    branches:
    - v5
  pull_request:
    branches:
    - v5

jobs:
  windows:
    name: macOS (PHP ${{ matrix.php-versions }} CI)
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        operating-system: [macos-latest]
        php-versions: ['7.3']

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, fileinfo, mysqli, pdo_mysql, pgsql, pdo_pgsql, sqlite3, pdo_sqlite, sqlsrv, pdo_sqlsrv, xdebug
          coverage: xdebug
      - name: Brew Install MySQL
        run: |
          brew install mysql@5.7
      - name: Brew Start MySQL
        run: |
          brew services start mysql@5.7
          brew link mysql@5.7 --force
          mysqld --initialize-insecure
          mysql.server start
      - name: Setup MySQL Database
        run: |
          mysql -u root -e "CREATE DATABASE IF NOT EXISTS ez_test;"
          mysql -u root -e "CREATE USER ez_test@localhost IDENTIFIED BY 'ezTest'; GRANT ALL ON ez_test.* TO ez_test@localhost; FLUSH PRIVILEGES;"
      - name: Brew Start PostgreSql
        run: |
          sudo mkdir /var/pgsql_socket/
          sudo ln -s /private/tmp/.s.PGSQL.5432 /var/pgsql_socket/
          pg_ctl -D /usr/local/var/postgres -l /usr/local/var/postgres/server.log start
          brew services restart postgresql
      - name: Setup PostgreSql Database
        run: |
          createuser -s postgres
          psql -U postgres --command="CREATE USER ez_test PASSWORD 'ezTest'" --command="\du"
          createdb --owner=ez_test ez_test
      - name: Install Docker, and Docker Machine
        run: |
          brew install docker docker-machine
          brew services start docker-machine
          docker-machine create --driver virtualbox default
          eval $(docker-machine env default)
      - name: Docker Install SQLServer
        run: |
          docker version
          sudo nohup docker -H tcp://0.0.0.0:2375 -H unix:///var/run/docker.sock &
          sudo docker pull mcr.microsoft.com/mssql/server
          sudo docker run --name ms_sql_server -e 'ACCEPT_EULA=Y' -e 'SA_PASSWORD=Password12!' -p 1433:1433 -d mcr.microsoft.com/mssql/server
      - name: Brew Install MSSQL Tools
        run: |
          /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew tap microsoft/mssql-release https://github.com/Microsoft/homebrew-mssql-release
          brew update
          HOMEBREW_NO_ENV_FILTERING=1 ACCEPT_EULA=y brew install mssql-tools
      - name: Setup SQLServer Database
        run: |
          sqlcmd -S localhost,1433 -U sa -P Password12! -Q "CREATE DATABASE ez_test"
          sqlcmd -S localhost,1433 -U sa -P Password12! -d ez_test -Q "CREATE LOGIN ez_test WITH PASSWORD=N'ezTest', DEFAULT_DATABASE=ez_test, CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF; ALTER SERVER ROLE [sysadmin] ADD MEMBER ez_test"
      - name: Install dependencies
        run: composer update
      - name: Test with phpunit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Submit code coverage
        uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml # optional
